<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[My Octopress Blog]]></title>
  <link href="http://bohr.github.io/atom.xml" rel="self"/>
  <link href="http://bohr.github.io/"/>
  <updated>2013-05-19T07:23:25+00:00</updated>
  <id>http://bohr.github.io/</id>
  <author>
    <name><![CDATA[Your Name]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Ineffable Shopping Guide 介绍]]></title>
    <link href="http://bohr.github.io/blog/2011/10/10/ineffable-shopping-guide/"/>
    <updated>2011-10-10T00:00:00+00:00</updated>
    <id>http://bohr.github.io/blog/2011/10/10/ineffable-shopping-guide</id>
    <content type="html"><![CDATA[<p>Ineffable Shopping Guide 是我们参加微软校园菁英计划之“有求必应”结构化数据搜索是想到的。主要目的还是因为面对那些琳琅满目的商品你是否觉得无从下手，买各种数码产品首先都是到处找该产品的评论信息。我们就准备将这些产品的评论信息进行整合起来，这样就极大的方便了用户，既给了用户想知道的信息，又为用户提供了没有考虑到的信息。下面是我们作品展示的海报。在线Demo展示：<a href="http://shopping.daijun.info">http://shopping.daijun.info</a></p>

<p><a href="http://yanggang.me/images/daijun/wp-content/uploads/2011/10/large_V5I0_503900007a9412601.jpg"><img class="alignnone size-full wp-image-7048" alt="large_V5I0_503900007a941260" src="http://yanggang.me/images/daijun/wp-content/uploads/2011/10/large_V5I0_503900007a9412601.jpg" width="709" height="720" /></a></p>

<p><strong>在线视频：</strong></p>

<p><object width="480" height="400" classid="clsid:d27cdb6e-ae6d-11cf-96b8-444553540000" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0" align="middle"><param name="src" value="http://player.youku.com/player.php/sid/XMjg4MTgxNzM2/v.swf" /><param name="allowfullscreen" value="true" /><param name="quality" value="high" /><param name="allowscriptaccess" value="always" /><embed width="480" height="400" type="application/x-shockwave-flash" src="http://player.youku.com/player.php/sid/XMjg4MTgxNzM2/v.swf" allowfullscreen="true" quality="high" allowscriptaccess="always" align="middle" /></object></p>

<p><strong>技术说明</strong>
<div id="__ss_9627040" style="width: 425px;"><strong style="margin: 12px 0px 4px; display: block;"><a title="Ineffable Shopping Guide 结构化搜索" href="http://www.slideshare.net/dj3141592653/ineffable-shopping-guide" target="_blank">Ineffable Shopping Guide 结构化搜索</a></strong> <object id="__sse9627040" width="425" height="355" classid="clsid:d27cdb6e-ae6d-11cf-96b8-444553540000" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0"><param name="allowFullScreen" value="true" /><param name="allowScriptAccess" value="always" /><param name="src" value="http://static.slidesharecdn.com/swf/ssplayer2.swf?doc=random-111010040424-phpapp01&amp;stripped_title=ineffable-shopping-guide&amp;userName=dj3141592653" /><param name="allowfullscreen" value="true" /><param name="allowscriptaccess" value="always" /><embed id="__sse9627040" width="425" height="355" type="application/x-shockwave-flash" src="http://static.slidesharecdn.com/swf/ssplayer2.swf?doc=random-111010040424-phpapp01&amp;stripped_title=ineffable-shopping-guide&amp;userName=dj3141592653" allowfullscreen="true" allowscriptaccess="always" /><img src="http://yanggang.me/images/daijun/wp-includes/js/tinymce/themes/advanced/img/trans.gif" class="mceItemMedia mceItemFlash" width="425" height="355" data-mce-json="{'video':{},'params':{'src':'http://static.slidesharecdn.com/swf/ssplayer2.swf?doc=random-111010040424-phpapp01&amp;stripped_title=ineffable-shopping-guide&amp;userName=dj3141592653','allowscriptaccess':'always','allowfullscreen':'true'},'hspace':null,'vspace':null,'align':null,'bgcolor':null}" alt="" /></object></div></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Childsearch----2010腾讯校园之星作品]]></title>
    <link href="http://bohr.github.io/blog/2011/10/10/childsearch-2010/"/>
    <updated>2011-10-10T00:00:00+00:00</updated>
    <id>http://bohr.github.io/blog/2011/10/10/childsearch-2010</id>
    <content type="html"><![CDATA[<p><ul>
	<li>专为儿童开发的搜索引擎，主要功能有：</li>
	<li>拼音搜索功能</li>
	<li>自动对输入关键字分类</li>
	<li>智能匹配电影、游戏</li>
	<li>游戏可以自动播放</li>
</ul>
<h5><a href="http://labs.soso.com/cstar2011/xqtop.html#project_id=9476">作品展示</a></h5>
<h5><a href="http://113.105.93.45:8000/">在线运行</a></h5>
<img alt="" src="http://wiki.daijun.info/images/childsearch.png" width="750" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ineffable Shopping Guide 结构化搜索技术介绍]]></title>
    <link href="http://bohr.github.io/blog/2011/07/28/ineffable-shopping-guide-2/"/>
    <updated>2011-07-28T00:00:00+00:00</updated>
    <id>http://bohr.github.io/blog/2011/07/28/ineffable-shopping-guide-2</id>
    <content type="html"><![CDATA[<p><div id="__ss_9627040" style="width: 425px;"><strong style="margin: 12px 0px 4px; display: block;"><a title="Ineffable Shopping Guide 结构化搜索" href="http://www.slideshare.net/dj3141592653/ineffable-shopping-guide">Ineffable Shopping Guide 结构化搜索</a></strong><object id="__sse9627040" width="425" height="355" classid="clsid:d27cdb6e-ae6d-11cf-96b8-444553540000" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0"><param name="allowFullScreen" value="true" /><param name="allowScriptAccess" value="always" /><param name="src" value="http://static.slidesharecdn.com/swf/ssplayer2.swf?doc=random-111010040424-phpapp01&amp;stripped_title=ineffable-shopping-guide&amp;userName=dj3141592653" /><param name="allowscriptaccess" value="always" /><param name="allowfullscreen" value="true" /><embed id="__sse9627040" width="425" height="355" type="application/x-shockwave-flash" src="http://static.slidesharecdn.com/swf/ssplayer2.swf?doc=random-111010040424-phpapp01&amp;stripped_title=ineffable-shopping-guide&amp;userName=dj3141592653" allowfullscreen="true" allowscriptaccess="always" /></object>
<div style="padding-bottom: 12px; padding-left: 0px; padding-right: 0px; padding-top: 5px;">View more <a href="http://www.slideshare.net/">presentations</a> from <a href="http://www.slideshare.net/dj3141592653">dj3141592653</a>.</div>
</div>
介绍说明：<a href="http://daijun.info/?p=7041">http://daijun.info/?p=7041</a></p>

<p>主要技术：爬虫（Python）+分词（盘古分词）+ Lucene.Net</p>

<p>爬虫代码：<a href="https://github.com/xddaijun/Shopping-Guide">https://github.com/xddaijun/Shopping-Guide</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[利用Python来解析Pcap包]]></title>
    <link href="http://bohr.github.io/blog/2011/03/23/python-pcap/"/>
    <updated>2011-03-23T00:00:00+00:00</updated>
    <id>http://bohr.github.io/blog/2011/03/23/python-pcap</id>
    <content type="html"><![CDATA[<p>Tcpdump可以将网络中传送的数据包的“头”完全截获下来提供分析。它支持针对网络层、协议、主机、网络或端口的过滤，并提供and、or、not等逻辑语句来帮助你去掉无用的信息。</p>

<p><a href="http://yanggang.me/images/daijun/wp-content/uploads/2011/03/3.png"><img class="alignnone size-full wp-image-7061" alt="3" src="http://yanggang.me/images/daijun/wp-content/uploads/2011/03/3.png" width="620" height="279" /></a></p>

<p>这个我在截取的一段Tcpdump的数据包。通常可以采用wireshark来对Tcpdump数据包进行分析。</p>

<p><a href="http://yanggang.me/images/daijun/wp-content/uploads/2011/03/1.png"><img class="alignnone size-full wp-image-7059" alt="1" src="http://yanggang.me/images/daijun/wp-content/uploads/2011/03/1.png" width="640" height="263" /></a></p>

<p><a href="http://yanggang.me/images/daijun/wp-content/uploads/2011/03/3.png"><img class="alignnone size-full wp-image-7061" alt="3" src="http://yanggang.me/images/daijun/wp-content/uploads/2011/03/3.png" width="620" height="279" /></a></p>

<p>从图中大概可以看出每一个tcpdump的数据里面有很多的包，每一个包都有包的head部分和Data部分。其中head部分包括网卡的地址，ip的地址，端口地址，发送时间等等很多信息。在我的工作中需要将包的发送时间、它的目的IP以及发送的数据保存起来。这就需要对tcpdump数据进行分析，提取出有用的信息。</p>

<p>在网上有一个C#版本做的解析Pcap数据包的资料，很有参考价值。<a href="http://www.cnblogs.com/zealic/archive/2008/05/04/1182420.html">读写 cap 文件的 C# 代码（兼容 tcpdump 及 Wireshark）</a></p>

<p>它的关键代码
<pre class="code"><span style="color: blue;">#region </span>Constructors
      <span style="color: gray;">/// &lt;summary&gt;
      /// </span><span style="color: green;">构造一个 Pcap 包捕获读取器。
      </span><span style="color: gray;">/// &lt;/summary&gt;
      /// &lt;param name="baseStream"&gt;</span><span style="color: green;">要读取的基础流</span><span style="color: gray;">&lt;/param&gt;
      </span><span style="color: blue;">public </span>PacketCaptureReader(<span style="color: teal;">Stream </span>baseStream)
      {
          <span style="color: blue;">if </span>(baseStream == <span style="color: blue;">null</span>)</pre>
<pre class="code"><span style="color: blue;">throw new </span><span style="color: teal;">ArgumentNullException</span>(<span style="color: maroon;">"baseStream"</span>);
          <span style="color: blue;">if </span>(!baseStream.CanRead)</pre>
<pre class="code"><span style="color: blue;">throw new </span><span style="color: teal;">ArgumentException</span>(<span style="color: maroon;">"传入的流必须为可读。"</span>, <span style="color: maroon;">"baseStream"</span>);
          _BaseStream = baseStream;
          m_Reader = <span style="color: blue;">new </span><span style="color: teal;">BinaryReader</span>(_BaseStream);
          <span style="color: blue;">if </span>(m_Reader.ReadUInt32() != MAGIC)
              <span style="color: blue;">throw new </span><span style="color: teal;">FormatException</span>(<span style="color: maroon;">"无效的 PCAP 格式。"</span>);
          <span style="color: blue;">short </span>versionMajor = m_Reader.ReadInt16();
          <span style="color: blue;">short </span>versionMinjor = m_Reader.ReadInt16();
          <span style="color: blue;">if </span>(versionMajor != 2 || VersionMinjor != 4)
          {
              <span style="color: blue;">throw new </span><span style="color: teal;">FormatException</span>(</pre>
<blockquote>
<pre class="code"><span style="color: blue;">string</span>.Format(<span style="color: maroon;">"无法处理的 PCAP 版本 {0}.{1}"</span>, versionMajor, versionMinjor));
          }
          _TimeZone = m_Reader.ReadInt32();
          _CaptureTimestamp = m_Reader.ReadInt32();
          _MaxPacketLength = m_Reader.ReadInt32();
          _LinkLayerType = (<span style="color: teal;">LinkLayerType</span>)m_Reader.ReadInt32();
      }</pre></blockquote></p>

<p>      <span style="color: blue;">#endregion</span></p>

<p>      <span style="color: gray;">/// &lt;summary&gt;<br />
      /// </span><span style="color: green;">读取下一个捕获包<br />
      </span><span style="color: gray;">/// &lt;/summary&gt;<br />
      /// &lt;returns&gt;</span><span style="color: green;">读取的捕获包，如果已经到达尾端，返回 null</span><span style="color: gray;">&lt;/returns&gt;<br />
      </span><span style="color: blue;">public </span><span style="color: teal;">PacketCapture </span>Read()<br />
      {<br />
          <span style="color: blue;">if </span>(_BaseStream.Position == _BaseStream.Length) <span style="color: blue;">return null</span>;<br />
          <span style="color: teal;">UnixTime </span>timestamp = <span style="color: blue;">new </span><span style="color: teal;">UnixTime</span>(m_Reader.ReadInt32());<br />
          <span style="color: blue;">int </span>millseconds = m_Reader.ReadInt32();<br />
          <span style="color: blue;">if </span>(millseconds &gt; 1000000)<br />
              <span style="color: blue;">throw new </span><span style="color: teal;">InvalidDataException</span>(<span style="color: maroon;">&#8220;读取到无效的数据格式。&#8221;</span>);<br />
          <span style="color: blue;">int </span>len = m_Reader.ReadInt32();<br />
          <span style="color: blue;">int </span>rawLen = m_Reader.ReadInt32();<br />
          <span style="color: blue;">if </span>(len &gt; rawLen)<br />
              <span style="color: blue;">throw new </span><span style="color: teal;">InvalidDataException</span>(<span style="color: maroon;">&#8220;读取到无效的数据格式。&#8221;</span>);<br />
          <span style="color: blue;">byte</span>[] buff = m_Reader.ReadBytes(len);<br />
          <span style="color: blue;">return new </span><span style="color: teal;">PacketCapture</span>(buff, rawLen, timestamp, millseconds);<br />
      }

从中可以看出 每一个tcpdump数据里面都有一个数据格式的head信息，通过读取该部分判断这个数据包的格式。剩下的部分就是我需要的数据包内容了。</p>

<p>我的python代码如下
<div id="codeSnippetWrapper" style="text-align: left; line-height: 12pt; background-color: #f4f4f4; margin: 20px 0px 10px; width: 97.5%; font-family: 'Courier New', courier, monospace; direction: ltr; max-height: 200px; font-size: 8pt; overflow: auto; cursor: text; border: silver 1px solid; padding: 4px;">
<div id="codeSnippet" style="text-align: left; line-height: 12pt; background-color: #f4f4f4; width: 100%; font-family: 'Courier New', courier, monospace; direction: ltr; color: black; font-size: 8pt; overflow: visible; border-style: none; padding: 0px;">
<pre style="text-align: left; line-height: 12pt; background-color: white; margin: 0em; width: 100%; font-family: 'Courier New', courier, monospace; direction: ltr; color: black; font-size: 8pt; overflow: visible; border-style: none; padding: 0px;"><span id="lnum1" style="color: #606060;">   1:</span> <span style="color: #008000;">#!/usr/bin/python2.5</span></pre>
<!--CRLF-->
<pre style="text-align: left; line-height: 12pt; background-color: #f4f4f4; margin: 0em; width: 100%; font-family: 'Courier New', courier, monospace; direction: ltr; color: black; font-size: 8pt; overflow: visible; border-style: none; padding: 0px;"><span id="lnum2" style="color: #606060;">   2:</span> <span style="color: #008000;"># -*- coding: utf-8 -*-#</span></pre>
<!--CRLF-->
<pre style="text-align: left; line-height: 12pt; background-color: white; margin: 0em; width: 100%; font-family: 'Courier New', courier, monospace; direction: ltr; color: black; font-size: 8pt; overflow: visible; border-style: none; padding: 0px;"><span id="lnum3" style="color: #606060;">   3:</span> import struct</pre>
<!--CRLF-->
<pre style="text-align: left; line-height: 12pt; background-color: #f4f4f4; margin: 0em; width: 100%; font-family: 'Courier New', courier, monospace; direction: ltr; color: black; font-size: 8pt; overflow: visible; border-style: none; padding: 0px;"><span id="lnum4" style="color: #606060;">   4:</span> import os</pre>
<!--CRLF-->
<pre style="text-align: left; line-height: 12pt; background-color: white; margin: 0em; width: 100%; font-family: 'Courier New', courier, monospace; direction: ltr; color: black; font-size: 8pt; overflow: visible; border-style: none; padding: 0px;"><span id="lnum5" style="color: #606060;">   5:</span> import re</pre>
<!--CRLF-->
<pre style="text-align: left; line-height: 12pt; background-color: #f4f4f4; margin: 0em; width: 100%; font-family: 'Courier New', courier, monospace; direction: ltr; color: black; font-size: 8pt; overflow: visible; border-style: none; padding: 0px;"><span id="lnum6" style="color: #606060;">   6:</span> import sys</pre>
<!--CRLF-->
<pre style="text-align: left; line-height: 12pt; background-color: white; margin: 0em; width: 100%; font-family: 'Courier New', courier, monospace; direction: ltr; color: black; font-size: 8pt; overflow: visible; border-style: none; padding: 0px;"><span id="lnum7" style="color: #606060;">   7:</span> import time</pre>
<!--CRLF-->
<pre style="text-align: left; line-height: 12pt; background-color: #f4f4f4; margin: 0em; width: 100%; font-family: 'Courier New', courier, monospace; direction: ltr; color: black; font-size: 8pt; overflow: visible; border-style: none; padding: 0px;"><span id="lnum8" style="color: #606060;">   8:</span> import socket</pre>
<!--CRLF-->
<pre style="text-align: left; line-height: 12pt; background-color: white; margin: 0em; width: 100%; font-family: 'Courier New', courier, monospace; direction: ltr; color: black; font-size: 8pt; overflow: visible; border-style: none; padding: 0px;"><span id="lnum9" style="color: #606060;">   9:</span> def Pcap_check(infile):</pre>
<!--CRLF-->
<pre style="text-align: left; line-height: 12pt; background-color: #f4f4f4; margin: 0em; width: 100%; font-family: 'Courier New', courier, monospace; direction: ltr; color: black; font-size: 8pt; overflow: visible; border-style: none; padding: 0px;"><span id="lnum10" style="color: #606060;">  10:</span>     c = infile.read(24)</pre>
<!--CRLF-->
<pre style="text-align: left; line-height: 12pt; background-color: white; margin: 0em; width: 100%; font-family: 'Courier New', courier, monospace; direction: ltr; color: black; font-size: 8pt; overflow: visible; border-style: none; padding: 0px;"><span id="lnum11" style="color: #606060;">  11:</span>     <span style="color: #0000ff;">if</span> not c:</pre>
<!--CRLF-->
<pre style="text-align: left; line-height: 12pt; background-color: #f4f4f4; margin: 0em; width: 100%; font-family: 'Courier New', courier, monospace; direction: ltr; color: black; font-size: 8pt; overflow: visible; border-style: none; padding: 0px;"><span id="lnum12" style="color: #606060;">  12:</span>         <span style="color: #0000ff;">return</span> c</pre>
<!--CRLF-->
<pre style="text-align: left; line-height: 12pt; background-color: white; margin: 0em; width: 100%; font-family: 'Courier New', courier, monospace; direction: ltr; color: black; font-size: 8pt; overflow: visible; border-style: none; padding: 0px;"><span id="lnum13" style="color: #606060;">  13:</span>     (a,b,cx,d,e,f,g)=struct.unpack(<span style="color: #006080;">'&lt;Ihhiiii'</span>,c)</pre>
<!--CRLF-->
<pre style="text-align: left; line-height: 12pt; background-color: #f4f4f4; margin: 0em; width: 100%; font-family: 'Courier New', courier, monospace; direction: ltr; color: black; font-size: 8pt; overflow: visible; border-style: none; padding: 0px;"><span id="lnum14" style="color: #606060;">  14:</span>     <span style="color: #0000ff;">if</span> a!= 0xA1B2C3D4:</pre>
<!--CRLF-->
<pre style="text-align: left; line-height: 12pt; background-color: white; margin: 0em; width: 100%; font-family: 'Courier New', courier, monospace; direction: ltr; color: black; font-size: 8pt; overflow: visible; border-style: none; padding: 0px;"><span id="lnum15" style="color: #606060;">  15:</span>         <span style="color: #0000ff;">return</span> False</pre>
<!--CRLF-->
<pre style="text-align: left; line-height: 12pt; background-color: #f4f4f4; margin: 0em; width: 100%; font-family: 'Courier New', courier, monospace; direction: ltr; color: black; font-size: 8pt; overflow: visible; border-style: none; padding: 0px;"><span id="lnum16" style="color: #606060;">  16:</span>     <span style="color: #0000ff;">print</span> <span style="color: #006080;">"versionMajor:"</span>,b</pre>
<!--CRLF-->
<pre style="text-align: left; line-height: 12pt; background-color: white; margin: 0em; width: 100%; font-family: 'Courier New', courier, monospace; direction: ltr; color: black; font-size: 8pt; overflow: visible; border-style: none; padding: 0px;"><span id="lnum17" style="color: #606060;">  17:</span>     <span style="color: #0000ff;">print</span> <span style="color: #006080;">"VersionMinjor:"</span>,cx</pre>
<!--CRLF-->
<pre style="text-align: left; line-height: 12pt; background-color: #f4f4f4; margin: 0em; width: 100%; font-family: 'Courier New', courier, monospace; direction: ltr; color: black; font-size: 8pt; overflow: visible; border-style: none; padding: 0px;"><span id="lnum18" style="color: #606060;">  18:</span>     <span style="color: #0000ff;">print</span> <span style="color: #006080;">"_TimeZone:"</span>,d</pre>
<!--CRLF-->
<pre style="text-align: left; line-height: 12pt; background-color: white; margin: 0em; width: 100%; font-family: 'Courier New', courier, monospace; direction: ltr; color: black; font-size: 8pt; overflow: visible; border-style: none; padding: 0px;"><span id="lnum19" style="color: #606060;">  19:</span>     <span style="color: #0000ff;">print</span> <span style="color: #006080;">"_CaptureTimestamp"</span>,e</pre>
<!--CRLF-->
<pre style="text-align: left; line-height: 12pt; background-color: #f4f4f4; margin: 0em; width: 100%; font-family: 'Courier New', courier, monospace; direction: ltr; color: black; font-size: 8pt; overflow: visible; border-style: none; padding: 0px;"><span id="lnum20" style="color: #606060;">  20:</span>     <span style="color: #0000ff;">print</span> <span style="color: #006080;">"_MaxPacketLength:"</span>,f</pre>
<!--CRLF-->
<pre style="text-align: left; line-height: 12pt; background-color: white; margin: 0em; width: 100%; font-family: 'Courier New', courier, monospace; direction: ltr; color: black; font-size: 8pt; overflow: visible; border-style: none; padding: 0px;"><span id="lnum21" style="color: #606060;">  21:</span>     <span style="color: #0000ff;">print</span> <span style="color: #006080;">"_LinkLayerType:"</span>,g</pre>
<!--CRLF-->
<pre style="text-align: left; line-height: 12pt; background-color: #f4f4f4; margin: 0em; width: 100%; font-family: 'Courier New', courier, monospace; direction: ltr; color: black; font-size: 8pt; overflow: visible; border-style: none; padding: 0px;"><span id="lnum22" style="color: #606060;">  22:</span>     <span style="color: #0000ff;">return</span> True</pre>
<!--CRLF-->
<pre style="text-align: left; line-height: 12pt; background-color: white; margin: 0em; width: 100%; font-family: 'Courier New', courier, monospace; direction: ltr; color: black; font-size: 8pt; overflow: visible; border-style: none; padding: 0px;"><span id="lnum23" style="color: #606060;">  23:</span> def Pcap_read(infile):</pre>
<!--CRLF-->
<pre style="text-align: left; line-height: 12pt; background-color: #f4f4f4; margin: 0em; width: 100%; font-family: 'Courier New', courier, monospace; direction: ltr; color: black; font-size: 8pt; overflow: visible; border-style: none; padding: 0px;"><span id="lnum24" style="color: #606060;">  24:</span>     c = infile.read(16)</pre>
<!--CRLF-->
<pre style="text-align: left; line-height: 12pt; background-color: white; margin: 0em; width: 100%; font-family: 'Courier New', courier, monospace; direction: ltr; color: black; font-size: 8pt; overflow: visible; border-style: none; padding: 0px;"><span id="lnum25" style="color: #606060;">  25:</span>     <span style="color: #0000ff;">if</span> not c:</pre>
<!--CRLF-->
<pre style="text-align: left; line-height: 12pt; background-color: #f4f4f4; margin: 0em; width: 100%; font-family: 'Courier New', courier, monospace; direction: ltr; color: black; font-size: 8pt; overflow: visible; border-style: none; padding: 0px;"><span id="lnum26" style="color: #606060;">  26:</span>         <span style="color: #0000ff;">return</span> (<span style="color: #006080;">''</span>,0,c)</pre>
<!--CRLF-->
<pre style="text-align: left; line-height: 12pt; background-color: white; margin: 0em; width: 100%; font-family: 'Courier New', courier, monospace; direction: ltr; color: black; font-size: 8pt; overflow: visible; border-style: none; padding: 0px;"><span id="lnum27" style="color: #606060;">  27:</span>     (timestamp,millseconds,len,rawlen)=struct.unpack(<span style="color: #006080;">'&lt;IIII'</span>,c)</pre>
<!--CRLF-->
<pre style="text-align: left; line-height: 12pt; background-color: #f4f4f4; margin: 0em; width: 100%; font-family: 'Courier New', courier, monospace; direction: ltr; color: black; font-size: 8pt; overflow: visible; border-style: none; padding: 0px;"><span id="lnum28" style="color: #606060;">  28:</span>     timeStruct=time.gmtime(timestamp)</pre>
<!--CRLF-->
<pre style="text-align: left; line-height: 12pt; background-color: white; margin: 0em; width: 100%; font-family: 'Courier New', courier, monospace; direction: ltr; color: black; font-size: 8pt; overflow: visible; border-style: none; padding: 0px;"><span id="lnum29" style="color: #606060;">  29:</span>     currentTime=(timeStruct.tm_hour*3600+timeStruct.tm_min*60+</pre>
<!--CRLF-->
<pre style="text-align: left; line-height: 12pt; background-color: #f4f4f4; margin: 0em; width: 100%; font-family: 'Courier New', courier, monospace; direction: ltr; color: black; font-size: 8pt; overflow: visible; border-style: none; padding: 0px;"><span id="lnum30" style="color: #606060;">  30:</span>                 timeStruct.tm_sec)*1000+millseconds/1000</pre>
<!--CRLF-->
<pre style="text-align: left; line-height: 12pt; background-color: white; margin: 0em; width: 100%; font-family: 'Courier New', courier, monospace; direction: ltr; color: black; font-size: 8pt; overflow: visible; border-style: none; padding: 0px;"><span id="lnum31" style="color: #606060;">  31:</span>     c=infile.read(34)</pre>
<!--CRLF-->
<pre style="text-align: left; line-height: 12pt; background-color: #f4f4f4; margin: 0em; width: 100%; font-family: 'Courier New', courier, monospace; direction: ltr; color: black; font-size: 8pt; overflow: visible; border-style: none; padding: 0px;"><span id="lnum32" style="color: #606060;">  32:</span>     source,dest=struct.unpack(<span style="color: #006080;">'&lt;26xII'</span>,c)</pre>
<!--CRLF-->
<pre style="text-align: left; line-height: 12pt; background-color: white; margin: 0em; width: 100%; font-family: 'Courier New', courier, monospace; direction: ltr; color: black; font-size: 8pt; overflow: visible; border-style: none; padding: 0px;"><span id="lnum33" style="color: #606060;">  33:</span>     source=socket.inet_ntoa(c[26:30])</pre>
<!--CRLF-->
<pre style="text-align: left; line-height: 12pt; background-color: #f4f4f4; margin: 0em; width: 100%; font-family: 'Courier New', courier, monospace; direction: ltr; color: black; font-size: 8pt; overflow: visible; border-style: none; padding: 0px;"><span id="lnum34" style="color: #606060;">  34:</span>     dest=socket.inet_ntoa(c[30:])</pre>
<!--CRLF-->
<pre style="text-align: left; line-height: 12pt; background-color: white; margin: 0em; width: 100%; font-family: 'Courier New', courier, monospace; direction: ltr; color: black; font-size: 8pt; overflow: visible; border-style: none; padding: 0px;"><span id="lnum35" style="color: #606060;">  35:</span>     infile.read(8)</pre>
<!--CRLF-->
<pre style="text-align: left; line-height: 12pt; background-color: #f4f4f4; margin: 0em; width: 100%; font-family: 'Courier New', courier, monospace; direction: ltr; color: black; font-size: 8pt; overflow: visible; border-style: none; padding: 0px;"><span id="lnum36" style="color: #606060;">  36:</span>     c=infile.read(len-8-34)</pre>
<!--CRLF-->
<pre style="text-align: left; line-height: 12pt; background-color: white; margin: 0em; width: 100%; font-family: 'Courier New', courier, monospace; direction: ltr; color: black; font-size: 8pt; overflow: visible; border-style: none; padding: 0px;"><span id="lnum37" style="color: #606060;">  37:</span>     <span style="color: #0000ff;">return</span> (dest,currentTime,c)</pre>
<!--CRLF--></div></div></p>

<p>

参考资料：<a href="http://www.cnblogs.com/zealic/archive/2008/05/04/1182420.html">读写 cap 文件的 C# 代码（兼容 tcpdump 及 Wireshark）</a><a title="http://www.cnblogs.com/zealic/archive/2008/05/04/1182420.html" href="http://www.cnblogs.com/zealic/archive/2008/05/04/1182420.html">http://www.cnblogs.com/zealic/archive/2008/05/04/1182420.html</a></p>

<p>tcpdump+python编写的流量监控的脚本 <a title="http://blog.csdn.net/kobeyan/archive/2009/07/13/4344192.aspx" href="http://blog.csdn.net/kobeyan/archive/2009/07/13/4344192.aspx">http://blog.csdn.net/kobeyan/archive/2009/07/13/4344192.aspx</a></p>

<p>dpkt下载地址：<a href="http://code.google.com/p/dpkt/downloads/list">http://code.google.com/p/dpkt/downloads/list</a></p>

<p>pcap下载地址：<a title="http://code.google.com/p/pypcap/" href="http://code.google.com/p/pypcap/">http://code.google.com/p/pypcap/</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[GDB学习笔记]]></title>
    <link href="http://bohr.github.io/blog/2011/02/16/gdb-study/"/>
    <updated>2011-02-16T00:00:00+00:00</updated>
    <id>http://bohr.github.io/blog/2011/02/16/gdb-study</id>
    <content type="html"><![CDATA[<p><h4>一些参考网页：
<a href="http://blog.ksplice.com/2011/01/8-gdb-tricks/" target="_blank">8 gdb tricks you should know</a>
<a href="http://wangcong.org/articles/learning-gdb.cn.html" target="_blank">学习使用 GNU GDB Debugger</a>
<a href="http://coolshell.cn/articles/3643.html" target="_blank">GDB中应该知道的几个调试方法</a></h4>
<strong>用GDB调试程序系列：</strong>  <a title="http://blog.csdn.net/haoel/archive/2003/07/02/2879.aspx" href="http://blog.csdn.net/haoel/archive/2003/07/02/2879.aspx">http://blog.csdn.net/haoel/archive/2003/07/02/2879.aspx</a></p>

<p>Two more very useful tricks:</p>

<p>1. Setting hardware breakpoints on data does not slow program execution and stops when the specific variable is modified. Sometimes gdb automatically sets HW breakpoint when you say watch . Sometimes you have to force it by using something like:</p>

<p>set x = &amp;<br />
watch *$x</p>

<p>2. You can set an “ignore count” on any breakpoint using “ignore “. GDB will stop after the breakpoint was hit that many times. The standard way to use this is to set the ignore count very high (say, 9999), run the program till it crashes or otherwise stops after an interesting event, and then use “info bp ” to determine how many times the breakpoint was hit. Then set the ignore count to that number -1 and rerun. The debugger will stop just before the interesting event.
<h4>GDB Essential commands</h4>
The command set of GDB really is quite concise and intuitive,<br />
so learn it now so you don&#8217;t have to when things are going pear shaped!
<table class="pixelbeat">
<tbody>
<tr class="pbtitle">
<td><b>Command</b></td>
<td><b>Abbrev</b></td>
<td><b>Description</b></td>
</tr>
<tr>
<td>set args</td>
<td></td>
<td>set command args. Also can do: gdb &#8211;args command arg1 &#8230;</td>
</tr>
<tr>
<td>break</td>
<td>b</td>
<td>set breakpoint (at function, line number, &#8230;)</td>
</tr>
<tr>
<td>disable</td>
<td>dis</td>
<td>disable breakpoints (all by default)</td>
</tr>
<tr>
<td>enable</td>
<td>en</td>
<td>enable breakpoints (all by default)</td>
</tr>
<tr>
<td>run</td>
<td>r</td>
<td>(re)start execution</td>
</tr>
<tr>
<td>continue</td>
<td>c</td>
<td>continue execution</td>
</tr>
<tr>
<td>step</td>
<td>s</td>
<td>next line</td>
</tr>
<tr>
<td>next</td>
<td>n</td>
<td>next line without recursing into functions</td>
</tr>
<tr>
<td>finish</td>
<td>fin</td>
<td>next line after this function returns</td>
</tr>
<tr>
<td>until &lt;line&gt;</td>
<td></td>
<td>continue execution until line number</td>
</tr>
<tr>
<td>list</td>
<td>l</td>
<td>show source (for line, function, offset, &#8230;)</td>
</tr>
<tr>
<td>backtrace</td>
<td>bt</td>
<td>show the stack of functions. Add &#8220;full&#8221; to include local variables</td>
</tr>
<tr>
<td>thread apply all bt</td>
<td>t a a bt</td>
<td>show the stack of functions in all threads</td>
</tr>
<tr>
<td>print var</td>
<td>p</td>
<td>display a variable. Use p/x for hex</td>
</tr>
<tr>
<td>x/16xb &lt;addr&gt;</td>
<td></td>
<td>hexdump 16 bytes at address</td>
</tr>
<tr>
<td>watch</td>
<td>wa</td>
<td>break when variable changes value</td>
</tr>
<tr>
<td>display</td>
<td>disp</td>
<td>display expression each time program stops</td>
</tr>
<tr>
<td>info locals</td>
<td>inf loc</td>
<td>display local variables</td>
</tr>
<tr>
<td>help &#8230;</td>
<td>h</td>
<td>display online help</td>
</tr>
<tr>
<td>focus next</td>
<td>fs n</td>
<td>switch window (allows cursor keys in CMD window for e.g.)</td>
</tr>
<tr>
<td>[Ctrl-x a]</td>
<td></td>
<td>toggle the text windowing interface</td>
</tr>
<tr>
<td>[Ctrl-L]</td>
<td></td>
<td>redraw the display (if program outputs for example)</td>
</tr>
<tr>
<td>[Return]</td>
<td></td>
<td>repeat the last command</td>
</tr>
</tbody>
</table></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Gratuitous ARP]]></title>
    <link href="http://bohr.github.io/blog/2011/02/14/gratuitous-arp/"/>
    <updated>2011-02-14T00:00:00+00:00</updated>
    <id>http://bohr.github.io/blog/2011/02/14/gratuitous-arp</id>
    <content type="html"><![CDATA[<p><p>以太网中为什么要用到Gratuitous ARP（以下简称GARP）呢？</p>  <p>第一，主机可以通过GARP向网络发送广播，以告诉整个广播域，目前某个IP所对应的MAC地址是什么——这一行为就像是在发宣传单，而宣传单是不需要回应的。</p>  <p>第二，主机是想看看广播域内有没有别的主机使用自己的IP地址，如果使用了，则在界面上弹出“IP冲突”字样。普通ARP请求报文广播发送出去，广播域内所有主机都会接收到，计算机系统判断ARP请求报文中的目的IP地址字段，如果发现和本机的IP地址相同，则将自己的MAC 地址填写到该报文的目的MAC地址字段，并将该报文发回给源主机。所以只要发送ARP请求的主机接收到报文，则证明广播域内有别的主机使用和自己相同的 IP地址（这里不考虑路由器的ARP代理问题）。免费ARP的报文发出去是不希望收到回应的，只希望是起宣告作用；如果收到回应，则证明对方也使用自己目前使用的IP地址，</p>  <h3></h3>  <p><strong>Gratuitous ARP</strong> could mean both gratuitous ARP <em>request</em> or gratuitous ARP <em>reply</em>. Gratuitous in this case means a request/reply that is not normally needed according to the ARP specification (RFC 826) but could be used in some cases. A gratuitous ARP request is an <a href="http://wiki.wireshark.org/AddressResolutionProtocol">AddressResolutionProtocol</a> request packet where the source and destination IP are both set to the IP of the machine issuing the packet and the destination MAC is the broadcast address <tt>ff:ff:ff:ff:ff:ff</tt>. Ordinarily, no reply packet will occur. A gratuitous ARP reply is a reply to which no request has been made.</p></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[很好的几个Cheat Sheet]]></title>
    <link href="http://bohr.github.io/blog/2010/10/19/cheat-sheet/"/>
    <updated>2010-10-19T00:00:00+00:00</updated>
    <id>http://bohr.github.io/blog/2010/10/19/cheat-sheet</id>
    <content type="html"><![CDATA[<p>一个很偶然的机会，发现还有人制作好的python的快速手册，相当精美。</p>

<p><a href="http://yanggang.me/images/daijun/wp-content/uploads/2010/10/6.png"><img class="alignnone size-full wp-image-7074" alt="6" src="http://yanggang.me/images/daijun/wp-content/uploads/2010/10/6.png" width="353" height="480" /></a></p>

<p>看上图，这里还有很多 python、<a href="http://www.addedbytes.com/cheat-sheets/regular-expressions-cheat-sheet/">Regular Expressions</a> 等等。</p>

<p>网址是<a title="http://www.addedbytes.com/cheat-sheets/" href="http://www.addedbytes.com/cheat-sheets/">http://www.addedbytes.com/cheat-sheets/</a>，他主要侧重于web开发</p>

<p>在搜索后还发现了一个，主要侧重于网络的。<a title="http://packetlife.net/library/cheat-sheets/" href="http://packetlife.net/library/cheat-sheets/">http://packetlife.net/library/cheat-sheets/</a></p>

<p>此外还有几个哲思软件社区做的几个学习笔记，也可以参考一下。</p>

<p><a href="http://amosk.info/pub/doc/learning-mysql.cn.html">Learning Mysql</a>
<a href="http://amosk.info/pub/doc/learning-git.cn.html">Learning Git</a>
<a href="http://amosk.info/pub/doc/learning-apache.cn.html">Learning Apache</a></p>

<p>from <a title="http://amosk.info/program.html" href="http://amosk.info/program.html">http://amosk.info/program.html</a></p>

<p>&nbsp;</p>

<p>&nbsp;</p>

<p><a href="http://wangcong.org/articles/learning-gcc.cn.html">Learning gcc</a> (in Chinese)
<a href="http://wangcong.org/articles/learning-gdb.cn.html">Learning gdb</a> (in Chinese)
<a href="http://wangcong.org/articles/learning-iptables.cn.html">Learning iptables</a> (in Chinese)</p>

<p>from <a title="http://wangcong.org/articles/index.html" href="http://wangcong.org/articles/index.html">http://wangcong.org/articles/index.html</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[皮影记--西电x_memo团队2010微软精英挑战赛第二阶段项目demo]]></title>
    <link href="http://bohr.github.io/blog/2010/05/07/x_memo-demo/"/>
    <updated>2010-05-07T00:00:00+00:00</updated>
    <id>http://bohr.github.io/blog/2010/05/07/x_memo-demo</id>
    <content type="html"><![CDATA[<p>皮影记——西电x_memo团队2010微软精英挑战赛第二阶段项目demo</p>

<p><object style="text-align: center; margin: 0px auto 10px; display: block;" width="480" height="418" classid="clsid:d27cdb6e-ae6d-11cf-96b8-444553540000" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0"><param name="src" value="http://player.youku.com/player.php/sid/XMTcxMTE3ODY0/v.swf" /><embed style="text-align: center; margin: 0px auto 10px; display: block;" width="480" height="418" type="application/x-shockwave-flash" src="http://player.youku.com/player.php/sid/XMTcxMTE3ODY0/v.swf" /></object></p>

<p><span style="font-family: Arial;"> </span></p>

<p><strong>视频旁白</strong></p>

<p>0:31 In the ancient China, Piying was very popular among folks.</p>

<p>0:38 But this traditional fashion can not keep the pace with the modern ones. And now we set out to evoke the glory!</p>

<p>1:17 On our way, we are not alone!</p>

<p>1:49 A complex operation and an aging character limits its popularity in our era.</p>

<p>2:24 And now we got the solution to bring it up to date. Street wear, pop music and free dance all combines the modern performance.</p>

<p>2:46 To expect more, you’re not alone during experiencing. Pictures can be uploaded with colorful stories hidden within hotspots area. Then others will easily touch your unique memory.</p>

<p>3:06 Feelings will be less different with reality after wearing a special glove with the Motion Detector Controller.</p>

<p>But now we are still on the way！！</p>

<p>西安电子科技大学微软技术俱乐部x_memo团队</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[德国朋友看好我们的皮影项目]]></title>
    <link href="http://bohr.github.io/blog/2010/04/25/shadow/"/>
    <updated>2010-04-25T00:00:00+00:00</updated>
    <id>http://bohr.github.io/blog/2010/04/25/shadow</id>
    <content type="html"><![CDATA[<p>我们x_memo团队在西安回民街寻访民间皮影艺人时，和一位德国朋友有过很多交谈，下面的视频是其中的一个小片段。在他看来，现在很多人都在盲目地追求流行文化，却忘记了常常回头看看过去的历史，去欣赏那些经典的东西，通过古代美好的艺术瑰宝，让我们从喧嚣的现实生活中回归一种宁静。视频里古今有点紧张，无伤大雅，呵呵。</p>

<p>&nbsp;</p>

<p><object style="text-align: center; margin: 0px auto 10px; display: block;" width="480" height="418" classid="clsid:d27cdb6e-ae6d-11cf-96b8-444553540000" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0"><param name="src" value="http://player.youku.com/player.php/sid/XMTY2OTEzMDU2/v.swf" /><param name="autostart" value="undefined" /><param name="loop" value="loop" /><embed style="text-align: center; margin: 0px auto 10px; display: block;" width="480" height="418" type="application/x-shockwave-flash" src="http://player.youku.com/player.php/sid/XMTY2OTEzMDU2/v.swf" autostart="undefined" loop="loop" /></object></p>

<p>U:Talk about this project&#8230;I think it&#8217;s very urgent,help pi ying,do you think so?<br />
G:Yeah,I also think so.<br />
U:In our minds,what should we look upon home without seeing only the technology?<br />
G:I think I like you guys&#8217; project,because all this world today, so fast,all the people,all the high tech,how to be fast,how to be mordenized,and&#8230;but I said Let&#8217;s go back to the roots,to the low way.you got fast food,why fast food?let&#8217;s go to the low food,its all the same,enjoy the classical things,that&#8217;s the way.I like it.I like your way.</p>

<p>用U代表我们，用G代表German Friend。</p>

<p>来源：http://x-memo.blog.sohu.com/148977366.html</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[使用Physics Helper 做SilverLight小游戏]]></title>
    <link href="http://bohr.github.io/blog/2010/04/22/physics-helper-silverlight/"/>
    <updated>2010-04-22T00:00:00+00:00</updated>
    <id>http://bohr.github.io/blog/2010/04/22/physics-helper-silverlight</id>
    <content type="html"><![CDATA[<p>最近在做一个Silverlight的游戏，由于人物上面的关节需要进行活动，类似于在flash用骨骼工具，在SilverLight中没有类似的控件，找了很多东西都感觉实现得很不理想。后来发现了 codeproject上面的一个<a href="http://physicshelper.codeplex.com/">Physics Helper</a>的开源项目，它封装了Farseer的功能，并且它的使用方法非常简单，直接在Blend中就可以实现很好的动画效果，支持鼠标，重力等。下面是他的描述。
<h3>Project Description</h3>
The Physics Helper for Blend, Silverlight and WPF contains several Behaviors and controls which allow you to draw objects in Expression Blend 3, and have those objects translated directly into Physics objects using the <a href="http://www.codeplex.com/farseerphysics">Farseer Physics Engine</a>. This can be a great timesaver for creating games, as it is traditionally difficult to line up underlying physics bodies and geometries with your Blend artwork.</p>

<p>demo演示地址    <a href="http://www.andybeaulieu.com/silverlight/3.0/physicshelper3/index.htm">http://www.andybeaulieu.com/silverlight/3.0/physicshelper3/index.htm</a>.</p>

<p><a href="http://www.andybeaulieu.com/silverlight/3.0/physicshelper3/DemoBehaviors2TestPage.html"><img alt="Demo Behaviors 2" src="http://yanggang.me/images/daijun/wp-content/uploads/2013/05/demo4.png" border="0" /></a></p>

<p>Rag Doll</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[震动与责任;走访民间皮影艺人]]></title>
    <link href="http://bohr.github.io/blog/2010/04/20/shadow-player/"/>
    <updated>2010-04-20T00:00:00+00:00</updated>
    <id>http://bohr.github.io/blog/2010/04/20/shadow-player</id>
    <content type="html"><![CDATA[<p>为了更好地完善项目，我们决定这学期再次寻访民间皮影艺人。于是我们特地前往西安回民街，希望能够发现更多和皮影有关的故事。</p>

<p><a href="http://pp.sohu.com/photoview-319092384-32925444.html"><img alt="" src="http://yanggang.me/images/daijun/wp-content/uploads/2013/05/128c74df83cg214.jpg" width="571" height="428" border="0" /></a></p>

<p>熙熙攘攘的回民街上，许多外国友人在寻觅来自伟大文明古国——中国的一些印记。可是，失望却写在了他们脸上，矮矮的红墙，不再奢华的招牌早已不如周边的摩天大楼，时装百货抢眼，那数千年来久久回荡长安城下的叫卖声，如今已经湮没在了无数繁杂不安的现代化都市噪声之中。寻觅良久，终于在一个小角落看到了一个“院内皮影戏”的牌子。当时的欣喜已无法用文字来重现，那对于文化的归属，对于自身国度历史的悲凉，在那一刻，杂糅在了一起，即使今天回忆起来，也是略带苦涩。</p>

<p><a href="http://pp.sohu.com/photoview-319091207-32925444.html"><img alt="" src="http://1812.img.pp.sohu.com.cn/images/2010/4/19/15/0/128c745755bg214.jpg" width="524" height="396" border="0" /></a></p>

<p>店里面摆满了各种皮影造型的艺术品。店面不大，却看的过是主人是用心在打扮的。正当我们驻足于一件件民间艺术品之前，主人走了出来。看见我们的到来，主人很热情地招呼我们坐下。我们谈论了许多关于皮影的辉煌的过去，惨淡的现状，和那看似正在不断混沌的未来。主人的师傅正好也在，一个已经一辈子以皮影卫生的老爷爷，今年已经80高龄了。他得知我们在做一个项目来保护皮影，瞳孔霎时间透出的光芒，至今令我们震撼。他从事皮影已经60年了，见证了其不断衰败的过程，他取出了他师傅，以及师傅的师傅传下来的宝贝，很认真地跟我们述说着200年来皮影的变化。在那里，仿佛是现代的博物馆，清朝制作的皮影在今天看来依然充满了艺术的光彩，让在现代文明中长大的我们为之震撼。</p>

<p><a href="http://pp.sohu.com/photoview-319094417-32925444.html"><img alt="" src="http://1812.img.pp.sohu.com.cn/images/2010/4/19/15/25/128c75c9a90g214.jpg" width="512" height="387" border="0" /></a></p>

<p>曾经，我只会在作文里高呼我们传统文化的绚丽，可是今天，一种从未有过的切身骄傲让我振奋不已。可是心也是痛的，这项技艺正在流失了。老爷爷无奈地说到“我的儿子也不肯学了，现在我只找到一个愿意接受的弟子。”老人无奈的话语，折射出多少传统文化在机械时代中的无奈，这一无奈多少年来一直困扰着我们，可是我们的解决之道在哪里？或许做皮影保护的项目本身只是一个途径，那时的我们更希望找到一种方法让传统文化以一种鲜活的姿态存活下去，而不是苟延残喘的在历史书上摇摇欲坠。</p>

<p>我们点了三英战吕布的戏后，老爷爷去准备皮影戏了。于是我们和老板攀谈起来。在聊天的过程中老板跟我们讲述了皮影戏传承过程中遇到的很多困难，比如老爷爷本来是有一班人马的，但是因为开销实在太大，演出收入少，所以目前还是存在很大的困难。但是我们依旧可以在老板时而发出的充满希望的眼神中看到一种期待。老板说他非常欢迎大学生们来关注皮影，早日让更多的民间皮影艺人登台表演，让更多的人可以看到我们老祖宗留下来的东西，共同见证中国的精彩。</p>

<p><a href="http://pp.sohu.com/photoview-319093633-32925444.html"><img alt="" src="http://1862.img.pp.sohu.com.cn/images/2010/4/19/15/19/128c756df74g213.jpg" width="486" height="367" border="0" /></a></p>

<p>特别值得一提的是，我们遇到了一位德国人，他特别看好中国的皮影戏。他想跟自己在德国的朋友一起分享这一艺术瑰宝，并表示愿意请老爷爷去德国演出。我们项目组也和这位德国人保持着联系，努力把皮影文化传播到更远的地方。</p>

<p>来源：<a title="http://x-memo.blog.sohu.com/148776953.html" href="http://x-memo.blog.sohu.com/148776953.html">http://x-memo.blog.sohu.com/148776953.html</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[用Matlab处理Dicom图像]]></title>
    <link href="http://bohr.github.io/blog/2010/04/14/matlab-dicom/"/>
    <updated>2010-04-14T00:00:00+00:00</updated>
    <id>http://bohr.github.io/blog/2010/04/14/matlab-dicom</id>
    <content type="html"><![CDATA[<p>最近在处理CT图像时，CT图像是对人体进行逐层扫描的，在图像有很多不需要的部分，比如肋骨部分就夹杂在里面，导致三维重建出来的图像有很多不需要的部分。很不好处理。</p>

<p>于是，我就想了了简单方法，对一张一张的dicom格式的图像，把里面不需要的像素点都置为黑色，这样就可以了。原打算用VC++6.0+VTK来实现的，调试起来太麻烦了，就直接用matlab来处理就简单了。</p>

<p>1。读写Dicom格式的图像
<div>
<pre>I=dicomread('E:CT37222.dcm');   %读取图像
metadata = dicominfo('E:CT37222.dcm');%存储信息
imagesc(I);%显示图像</pre></div></p>

<p>dicomwrite(I, &#8216;E:CT37222.dcm&#8217;,metadata);%写入Dicom图像

2.在Dicom图像上面进行选取需要的矩形区域</p>

<p>这个代码实现很简单，找到这个方法也费了一些波折</p>

<p>[xv,yv] = ginput(2);  %这样就可以在图像上面选取2个点，将X坐标保存到xv中，将y坐标保存到yv中。</p>

<p>如果有很多点形成一个矩形区域的话，可以用  in = inpolygon(x,y,xv,yv); 来判断，x，y坐标是否在选取的点围成的区域中。</p>

<p><a href="http://images.cnblogs.com/cnblogs_com/Chevalier/WindowsLiveWriter/MatlabDicom_12CC9/image_2.png"><img style="display: inline; border-width: 0px;" title="image" alt="image" src="http://yanggang.me/images/daijun/wp-content/uploads/2013/05/image_thumb.png" width="244" height="242" border="0" /></a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[用LINQ来对文章列表进行操作]]></title>
    <link href="http://bohr.github.io/blog/2010/04/04/linq/"/>
    <updated>2010-04-04T00:00:00+00:00</updated>
    <id>http://bohr.github.io/blog/2010/04/04/linq</id>
    <content type="html"><![CDATA[<p>最近正在做的一个软件，就是对某个网站的所有文章列表里添加一个监听器，判断是否有指定的关键字。对文章列表里面的抓取都已经做好了，就需要对一前一后的两个列表进行更新。本来可以用循环列表一个一个的进行判别的，一想在VS2008里面不是有个LINQ啊，一直只是听说过，从来没用过。今天试看看怎么用。就上网搜了会，照着别人的写了个。感觉效率不好，应该可以写成一个语句了，我去写成了三个，也不知道怎么改好。</p>

<p>&nbsp;
<pre class="brush:csharp"> public bool getState(ref List&lt;Post&gt; ls)
      {
          second = getData();
          var list2 = from s in first
                      where s.Title.IndexOf( key ) &gt;= 0
                      select s.getPostUid();
          first[4].getPostUid();
          var list3 = second.Where(s =&gt; s.Title.IndexOf( key) &gt;= 0);
          var l =from s in list3
              where !list2.Contains(s.getPostUid())
               select s;
          first = second;
          if (l.Count() &gt;= 1)
          {
              ls = l.ToList();
              return true;
          }
          else
              return false;
      }</pre></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[读红楼梦]]></title>
    <link href="http://bohr.github.io/blog/2009/08/06/hongloumeng/"/>
    <updated>2009-08-06T00:00:00+00:00</updated>
    <id>http://bohr.github.io/blog/2009/08/06/hongloumeng</id>
    <content type="html"><![CDATA[<p>最近在家实在想不出去干什么事好，就去弄了本红楼梦来看。照我以前来看，唯独红楼梦和围城这两本数最耐看，看了几遍了还是愿意再看下一遍。每次读者两本书都有新的感受。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[听完一曲琵琶语]]></title>
    <link href="http://bohr.github.io/blog/2009/07/29/pipayu/"/>
    <updated>2009-07-29T00:00:00+00:00</updated>
    <id>http://bohr.github.io/blog/2009/07/29/pipayu</id>
    <content type="html"><![CDATA[<p>前两天突然看到了一个电台推荐的几首歌，其中有林海的一首歌《琵琶语》，猛地一看，感觉非常熟悉的一个曲子，但是我却从来没听过这首曲子。突然想起来了，这首曲子是在高中时一个非常要好的朋友在闲暇之余向我推荐的一首歌，我记得很清楚的就是当时他和我说林海的琵琶相这首专辑非常好。不过我只是记住有这个曲子，却从未听过。想到这我就到QQ上找到他的号，给他留言说起了这首曲子。可也不知，他居然在线，又和我谈起了林海的《琵琶相》，确实天籁之音啊。听着这样的曲子，我又回想起在高中时的情景，我和他经常在教室的最后两排坐，我俩经常在后面谈论诗歌，书籍等等非常宽广。其实说是谈论，其实就是争吵那种性质的。就是在其中加入了古诗词，化学，物理等一些元素，反正一说起来就到处乱扯了。我还记得有时候我说不过他了，我就念起了王安石的《桂枝香》里面的词句&#8221; 叹门外楼头，悲恨相续&#8221;, 这句词说得是张丽华误国。他也姓张，说到这他就没话说了。我们反正是什么都乱侃，我当时感觉是我两人整天都争得面红耳赤的。等今年我去武大去找他的时候，他还感叹说我俩不是整天争吵的么，现在见面了怎么都争论不起来了。<br />
唉，在这琵琶语的曲调中，感叹里高中的生活，想起在高中的那段经历，虽然很苦也很累，但是确实有滋有味地过着，现在一晃就五年了，大学都已经毕业了。<br />
不自觉地又想起了这两句诗。曲终人不见，江上数峰青。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[大学图书馆的感觉]]></title>
    <link href="http://bohr.github.io/blog/2009/07/23/library/"/>
    <updated>2009-07-23T00:00:00+00:00</updated>
    <id>http://bohr.github.io/blog/2009/07/23/library</id>
    <content type="html"><![CDATA[<p>昨天下午去中关村图书大厦去看书，到了那这里翻了翻，那里看了看。看到这些曾经看过翻过的书籍，突然有了些在大学图书馆</p>

<p>看书的感觉。以前在图书馆的时候，也是像这样这里看，那里也翻翻。再看这里的书，计算机相关的大部分书都曾经在学校里面翻过</p>

<p>，也仅仅是翻过一点，其实对里面的内容都没有吃透就放下了。像以前在图书馆就看到过《编程珠玑》这本书，也是随便看了看就放</p>

<p>下了，昨天在中关村图书大厦看到这本书，感觉里面讲得都很有见解，很适合一读。现在回想起来，感觉还是以前在大学读的书太少</p>

<p>了，太不专注了。在今后的时间里，一定要克服自己的缺点。今天继续去中关村去看书，今天的目标主要是去读《精通正则表达式》这本书</p>

<p>。再去找找以前在大学图书馆的感觉。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[威海夜雨]]></title>
    <link href="http://bohr.github.io/blog/2009/03/22/rain-weihai/"/>
    <updated>2009-03-22T00:00:00+00:00</updated>
    <id>http://bohr.github.io/blog/2009/03/22/rain-weihai</id>
    <content type="html"><![CDATA[<p>昨天晚上，威海下起了濛濛细雨，我走在雨中，思考着这用什么诗句来形容。像朱自清的写的春，感觉太腻味了。宋词“落花人独立，微雨燕双飞”也感觉不是很好。最后，想到了李商隐的《巴山夜雨》感觉最好了。
<p align="center"><strong>夜雨寄北 </strong></p>
<p align="center"><strong>李商隐<br />
君问归期未有期，巴山夜雨涨秋池。<br />
何当共剪西窗烛，却话巴山夜雨时。 </strong></p>
尤其这两句“何当共剪西窗烛，却话巴山夜雨时。”人在此而心在彼，实乃绝唱也。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[感觉好累]]></title>
    <link href="http://bohr.github.io/blog/2009/03/15/tired/"/>
    <updated>2009-03-15T00:00:00+00:00</updated>
    <id>http://bohr.github.io/blog/2009/03/15/tired</id>
    <content type="html"><![CDATA[<p>本来在学校了是很轻松的事。可这些天总感觉自己六神无主，心不在焉。也许是这些天大家都去考公务员什么的去了。总是一个人坐在电脑旁，一会看看这，一会写写那。</p>

<p>今天看了好几部电影《梅兰芳》、《霸王别姬》、《盲山》。看完了都感觉感触颇深，却也说不出个什么来。就这样有过去了一天.</p>

<p>明天早上继续跑步，去图书馆上自习。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[复试上机题]]></title>
    <link href="http://bohr.github.io/blog/2009/03/15/computer/"/>
    <updated>2009-03-15T00:00:00+00:00</updated>
    <id>http://bohr.github.io/blog/2009/03/15/computer</id>
    <content type="html"><![CDATA[<p><div class="t_msgfont" id="postmessage_54785">Problems A.请写一个程序，判断给定整数序列能否构成等差数列<br />
输入说明：多组数据，每组输入数据由两行构成，第一行只有一个整数n（&lt;1000），表示序列长度（即序列中整数的个数，0表示输入结束），第二行为n个整数，每个整数的取值区间都为[-32768&#8212;-32767]，整数之间以空格或挑格间隔。<br />
输出说明：对于每一组数据，输出一个yes或no，表示该序列能否构成等差数列。<br />
输入样本：<br />
6
23 15 4 18 35 11<br />
3
3 1 2<br />
0
输出样本：<br />
yes<br />
noProblem B.判断给定正整数是不是“水仙花数”。“水仙花数”是指一个三位数，其各位数字的立方和等于该数，例如153=13+53+33。<br />
输入说明：有多组数据，每组数据为一个正整数n（0&lt;n&lt;65536，占一行），为0时表示输入结束。<br />
输出说明：对于每一组数据，输出一个yes或no（表示该数是否为“水仙花数”）。<br />
输入样本：<br />
153<br />
111<br />
370<br />
422<br />
0
输出样本：<br />
yes<br />
no<br />
yes<br />
noProblem C. Arnold变换是一种常用的图像置乱技术，Arnold变换的定义如下：<br />
对任意N*N矩阵（所有元素都相同的矩阵除外），设i，j为矩阵元素原始下标，经过Arnold变换后新下标为i&#8217;，j&#8217;，且满足下式：<br />
i&#8217;=(i+j)mod N<br />
j&#8217;=(i+2j)mod N<br />
i,j:0,1,&#8230;&#8230;&#8230;N-1<br />
Arnold变换具有周期性，即经过若干次变换后，矩阵回到最初状态，且周期T与N的大小有关。对于任意N&gt;2，TN&lt;=N2/2，请编写程序输出给定的N（2&lt;N&lt;=10）对应的周期TN。<br />
输入说明：有多组数据，每组数据只有一个整数N（2&lt;N&lt;=10，占一行），为0时表示输入结束。<br />
输出说明：对输入的每一N，给出N*N矩阵的Arnold变换的周期T。<br />
输入样本：<br />
3
8<br />
0
输出样本：<br />
4
6</div></p>

<p>Problem D.对于一个正整数n，如果它的各位之和等于它的所有质因数的各位之和，则该数被称为Smith数。例如，31257=3*3*23*151，31257的各位数字之和为3+1+2+5+7=18，它的所有质因数的各位数字之和为3+3+2+3+1+5+1=18，因此，31257是一个Smith数。编写一个程序判断输入的正整数是不是Smith数。<br />
输入说明：有多组数据，每组数据只有一个整数n（&lt;100000，占一行），为0时表示输入结束。<br />
输出说明：对于每一组数据，输出一个yes或no（表示该数是否为Smith数）。<br />
输入样本：<br />
31257<br />
123<br />
0
输出样本：<br />
yes<br />
no</p>

<p>Problem E. 请写一个程序，计算Rn精确结果（0.0&lt;R&lt;99.999,n是整数且0&lt;n&lt;=25)。<br />
输入说明：有多组数据，每组数据占一行，用一对数据表示，第一个数据是R（含小数点共6位），第二个数据是n，两个数之间有一个空格。<br />
输出说明：对每个输入输出其结果（占一行）<br />
输入样本：<br />
95.123   12<br />
0.4321   20<br />
6.7592   9<br />
98.999   10<br />
1.0100   12<br />
输出样本：<br />
548815620517731830194541.899025343415715973535967221869852721<br />
.00000005148554641076956121994511276767154838481760200726351203835429763013462401<br />
29448126.764121021618164430206909037173276672<br />
90429072743629540498.107596019456651774561044010001<br />
1.126825030131969720661201</p>

<p></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[我们看海去]]></title>
    <link href="http://bohr.github.io/blog/2009/03/06/see-sea/"/>
    <updated>2009-03-06T00:00:00+00:00</updated>
    <id>http://bohr.github.io/blog/2009/03/06/see-sea</id>
    <content type="html"><![CDATA[<p><p style="line-height: 20.95pt; text-indent: 17.25pt;" align="left"><span style="font-family: 宋体; font-size: 11.5pt;">在寒假回家又看了一遍《城南旧事》。还是最喜欢里面《我们看海去》那一章。看看她的文字，又回想起了自己的童年，小时候有何曾不是有这样的梦想呢。</span></p>
<p style="line-height: 20.95pt;" align="center">  <em> </em><em><span style="font-family: 楷体_gb2312; font-size: 14pt;">我们看海去！<br />
我们看海去！<br />
蓝色的大海上，<br />
扬着白色的帆。<br />
金红的太阳，<br />
从海上升起来，<br />
照到海面照到船头。<br />
我们看海去！<br />
我们看海去！</span></em></p>
<p style="line-height: 20.95pt;" align="left"><em><span style="font-family: 宋体; font-size: 10pt;">   </span></em><span style="font-family: 宋体; font-size: 11.5pt;">看到书中提到的诗句，我一连读了好几遍这首诗。虽然一前小学时没学过这首诗，但越读越亲切，有种似曾相识的感觉。我在小的时候在学那篇周鲁彦的海潮的时候，就想今后能够看看大海，听听大海的淘声、潮声，那该是多么美好的一件是啊。</span></p>
<p style="line-height: 20.95pt;" align="left"><span style="font-family: 宋体; font-size: 11.5pt;">   </span><span style="font-family: 宋体; font-size: 11.5pt;">现在上大学了，住在海边了，离海倒是近了，却少了那一份神往与亲近。</span></p>
<p style="line-height: 20.95pt;" align="left"><span style="font-family: 宋体; font-size: 11.5pt;">   </span><span style="font-family: 宋体; font-size: 11.5pt;">在我小时候，也还有一个心愿，就是能够到北京去看天安门升国旗。还记得当时学过的一篇课文中写到天安门国旗班每次升国旗都是让五星红旗和太阳同时升起。</span></p>
<p style="line-height: 20.95pt;" align="left"><span style="font-family: 宋体; font-size: 11.5pt;">   </span><span style="font-family: 宋体; font-size: 11.5pt;">前些天总算是个机会在北京待了好些天，便想好找个时间去看天安门升国旗。我住的地方在北五环，天安门非常远。我提前查好第二天升旗时间是7：00.我在前一天就计划好，早上五点起床，赶第二天的早班车，再去转乘地铁。于是，当天晚上我就把闹钟定到5点，等第二天闹钟一响，我就起床。到了第二天，我5点起床，穿好衣服再收拾一下，然后去厨房做了点面条匆忙地吃了点。之后就飞快地跑了出去，刚走出们我就发现脚上有点不大对劲啊，原来我把两只不一样的鞋穿到脚上了，有回去赶紧换鞋。再就飞快的跑到公交站，在那等了一会，就赶上了5：40的首班车，直接坐公交到城铁13号线，到城铁是6：00.我在坐车到知春路转乘10号线到国展，然后转乘1号线到天安门。走出天安门地铁刚好7：03.走出来就看到国旗已经飘扬在天安门广场上，人群早已经散去了。我来晚了一步。</span></p>
<p style="line-height: 20.95pt;" align="left"><span style="font-family: 宋体; font-size: 11.5pt;">   </span><span style="font-family: 宋体; font-size: 11.5pt;">虽然说没看到升国旗，但我仍然很高兴，毕竟是小时候的一个梦想啊。等到了国庆节，我再去北京天安门看升国旗。</span></p>
<p style="line-height: 20.95pt;" align="left"><em><span style="font-family: 宋体; font-size: 10pt;">  </span></em> <span style="font-family: 宋体; font-size: 11.5pt;">现在在威海，还是很方便去看大海，感受大海，享受大海。明天我和小秦约好了，早上7：30跑环山。</span></p>
<p style="line-height: 20.95pt; text-indent: 23pt;" align="left"><span style="font-family: 宋体; font-size: 11.5pt;">我们看海去，我们看海去！</span></p></p>
]]></content>
  </entry>
  
</feed>
